var_decl := NAME = expr EOL
expr := mul_expr (( ADD_OP mul_expr ))*
mul_expr := unary_expr (( MUL_OP unary_expr ))*
unary_expr := SUB_OP base_expr | base_expr
base_expr := ( expr ) | operand

operand := CONST | NAME | func_call
func_call := NAME ( fact_arg_list
fact_arg_list := expr fact_arg_list_tail | )
fact_arg_list_tail := , expr fact_arg_list_tail | )

read := READ NAME EOL
print:= RRINT expr EOL
while_st := WHILE condition EOL st_list EOL
if_st := IF condition EOL st_list EOL
ret_st := RETURN expr EOL
condition := expr CMP_OP expr :

st_list := statement st_list | END
statement := var_decl | while_st | if_st | read | print | expr EOL | ret_st

func_declaration := NAME ( formal_arg_list : EOL st_list EOL
formal_arg_list := NAME formal_arg_list_tail | )
formal_arg_list_tail := , NAME formal_arg_list_tail | )

programm := statement programm | DEF func_declaration programm | EOF
